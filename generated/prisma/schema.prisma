// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  password  String
  firstName String
  lastName  String
  createdAt DateTime @default(now())
  folder    Folder[]
  file      File[]
}

model Folder {
  id            Int            @id @default(autoincrement())
  name          String
  ownerId       Int
  owner         User           @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  files         File[]
  sharedFolders SharedFolder[]
}

model File {
  id           Int      @id @default(autoincrement())
  originalName String
  url          String?
  publicId     String?
  size         Int
  createdAt    DateTime @default(now())
  folderId     Int
  folder       Folder   @relation(fields: [folderId], references: [id])
  uploaderId   Int
  uploader     User     @relation(fields: [uploaderId], references: [id])
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model SharedFolder {
  id        Int      @id @default(autoincrement())
  shareId   String   @unique
  folderId  Int
  folder    Folder   @relation(fields: [folderId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}
